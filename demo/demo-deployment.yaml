apiVersion: v1
kind: Namespace
metadata:
  name: demo-namespace
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: database-config
  namespace: demo-namespace
data:
  DATABASE_URL: jdbc:postgresql://postgres:5432/dians-users
  DATABASE_USERNAME: postgres
---
apiVersion: v1
kind: Secret
metadata:
  name: demo-secret
  namespace: demo-namespace
type: Opaque
data:
  database-password: ZGlhbnM=
---
apiVersion: v1
kind: Service
metadata:
  name: demo-service
  namespace: demo-namespace
spec:
  selector:
    app: demo
  ports:
    - name: http
      port: 8080
      targetPort: 8080
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: demo-ingress
  namespace: demo-namespace
  annotations:
    ingress.kubernetes.io/ssl-redirect: "true"
    traefik.ingress.kubernetes.io/ssl-passthrough: "false"
    traefik.ingress.kubernetes.io/rule-type: "PathPrefixStrip"
spec:
  ingressClassName: traefik
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: demo-service
                port:
                  number: 8080
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: demo-namespace
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: demo-namespace
spec:
  selector:
    app: postgres
  ports:
    - port: 5432
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: demo-namespace
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:13
          env:
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: dians
            - name: POSTGRES_DB
              value: dians-users
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-deployment
  namespace: demo-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: demo
  strategy:
    rollingUpdate:
      maxSurge: 5
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: demo
    spec:
      containers:
        - name: demo
          image: elenaprogramer/demo:latest
          ports:
            - containerPort: 8080
          env:
            - name: DATABASE_URL
              value: jdbc:postgresql://postgres:5432/dians-users
            - name: DATABASE_USERNAME
              value: postgres
            - name: POSTGRES_PASSWORD
              value: dians
